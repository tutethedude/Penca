@model Penca.Models.MainModel
@{
    ViewBag.Title = "Pronósticos";
    var disabled = Model.FirstRoundEnabled ? "" : "disabled";
    var disabledEigth = Model.EigthRoundEnabled ? "" : "disabled";
}
@*
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>Para vos que te gusta la timba.</h2>
            </hgroup>
            @if (!Request.IsAuthenticated)
            {
                <hgroup class="title">
                    <h2>Para cargar resultados hay que @Html.ActionLink("registrarse", "Register", "Account") o @Html.ActionLink("iniciar sesión", "Login", "Account"), no seas mamarera!</h2>
                </hgroup>
            }
        </div>
    </section>
}
*@
<article>
    @if (Model.DateCount >= 2)
    {
        <hgroup class="title">
            <h1>Ranking fecha a fecha</h1>
        </hgroup>
        <div id="chartAcc">
        </div>
        <hgroup class="title">
            <h1>Puntos de cada fecha</h1>
        </hgroup>
        <div id="chart">
        </div>
        <hgroup class="title">
            <h1>Puntos por grupos</h1>
        </hgroup>
        <div id="groupsChart">
        </div>
    }

    <hgroup class="title">
        <h1>Pronóstico octavos de final</h1>
    </hgroup>
    @foreach (var g in Model.MatchesByDateEigth)
    {
        <h3>@g.Key.ToString("dd MMM").ToUpper()</h3>
        foreach (var m in g)
        {
            var result = Model.MyResults.FirstOrDefault(r => r.MatchId == m.MatchId);
            var otherResults = Model.OtherResults.Where(r => r.MatchId == m.MatchId).OrderBy(r => r.UserId);
        <div class="penca-row">
            <div class="penca-row-date">
                <div>@m.MatchDate.ToString("HH:mm").ToUpper()</div>
            </div>
            <img height="28" src="~/Content/images/@m.HomeFlag()" title="@m.HomeTeam" />
            <input type="text" data-id="@m.MatchId"  value="@(result != null ? result.HomeScore : 0)" @disabledEigth />
            <span>&nbsp;</span>
            <input type="text" data-id="@m.MatchId"  value="@(result != null ? result.AwayScore : 0)" @disabledEigth />
            <img height="28" src="~/Content/images/@m.AwayFlag()" title="@m.AwayTeam" />
            <div class="penca-row-final">
                <div>@(m.HomeScore < 0 ? "Pendiente" : "Final: " + m.HomeScore.ToString() + " - " + m.AwayScore)</div>
                <div><strong>@(result != null ? result.ComputeEigthRoundScore() + " pts." : "")</strong></div>
            </div>

            @if (User.Identity.IsAuthenticated && !Model.EigthRoundEnabled)
            {
                <div class="penca-row-result-wrapper">
                    @foreach (var r in otherResults)
                    {
                        <div class="penca-row-result">
                            <div class="username">@r.UserName(Model.Users, 8).ToLower()</div>
                            <div>@r.HomeScore - @r.AwayScore</div>
                            <div>@(r.ComputeEigthRoundScore() + " pts.")</div>
                        </div>
                    }
                </div>
            }

        </div>
        }
    }
    
    <button id="btnSave" @disabledEigth>GUARDAR</button>
    @if (!Request.IsAuthenticated)
    {
        <span>Para cargar resultados hay que @Html.ActionLink("registrarse", "Register", "Account") o @Html.ActionLink("iniciar sesión", "Login", "Account"), no seas mamarera!</span>
    }

    @if (Model.OrderBy == "group")
    {    
        <hgroup class="title">
            <h1>Pronóstico fase de grupos</h1>
            <h2>@Html.ActionLink("Ver por fecha", "Index", "Home", new { orderBy = "date" }, null)</h2>
        </hgroup>
        foreach (var g in Model.MatchesByGroup)
        {
        <h3>GRUPO @g.Key</h3>
            foreach (var m in g)
            {
                var result = Model.MyResults.FirstOrDefault(r => r.MatchId == m.MatchId);
                var otherResults = Model.OtherResults.Where(r => r.MatchId == m.MatchId).OrderBy(r => r.UserId);
        <div class="penca-row">
            <div class="penca-row-date">
                <div>@m.MatchDate.ToString("dd MMM HH:mm").ToUpper()</div>
                @*<div><strong>GRUPO @m.Group</strong></div>*@
            </div>
            <img height="28" src="~/Content/images/@m.HomeFlag()" title="@m.HomeTeam" />
            <input type="text"  data-id="@m.MatchId" value="@(result != null ? result.HomeScore : 0)" @disabled />
            <span>&nbsp;</span>
            <input type="text"  data-id="@m.MatchId"  value="@(result != null ? result.AwayScore : 0)" @disabled />
            <img height="28" src="~/Content/images/@m.AwayFlag()" title="@m.AwayTeam" />
            <div class="penca-row-final">
                <div>@(m.HomeScore < 0 ? "Pendiente" : "Final: " + m.HomeScore.ToString() + " - " + m.AwayScore)</div>
                <div><strong>@(result != null ? result.ComputeFirstRoundScore() + " pts." : "")</strong></div>
            </div>

            @if (!Model.FirstRoundEnabled)
            {
                <div class="penca-row-result-wrapper">
                    @foreach (var r in otherResults)
                    {
                        <div class="penca-row-result">
                            <div class="username">@r.UserName(Model.Users, 8).ToLower()</div>
                            <div>@r.HomeScore - @r.AwayScore</div>
                            <div>@(r.ComputeFirstRoundScore() + " pts.")</div>
                        </div>
                    }
                </div>
            }
        </div>
            }
        }

    }
    else
    {        
        
        <hgroup class="title">
            <h1>Pronóstico fase de grupos</h1>
            <h2>@Html.ActionLink("Ver por grupos", "Index", "Home", new { orderBy = "group" }, null)</h2>
        </hgroup>
        foreach (var g in Model.MatchesByDate)
        {
        <h3>@g.Key.ToString("dd MMM").ToUpper()</h3>
            foreach (var m in g)
            {
                var result = Model.MyResults.FirstOrDefault(r => r.MatchId == m.MatchId);
                var otherResults = Model.OtherResults.Where(r => r.MatchId == m.MatchId).OrderBy(r => r.UserId);
        <div class="penca-row">
            <div class="penca-row-date">
                <div>@m.MatchDate.ToString("HH:mm").ToUpper()</div>
                <div><strong>GRUPO @m.Group</strong></div>
            </div>
            <img height="28" src="~/Content/images/@m.HomeFlag()" title="@m.HomeTeam" />
            <input type="text" data-id="@m.MatchId"  value="@(result != null ? result.HomeScore : 0)" @disabled />
            <span>&nbsp;</span>
            <input type="text" data-id="@m.MatchId"  value="@(result != null ? result.AwayScore : 0)" @disabled />
            <img height="28" src="~/Content/images/@m.AwayFlag()" title="@m.AwayTeam" />
            <div class="penca-row-final">
                <div>@(m.HomeScore < 0 ? "Pendiente" : "Final: " + m.HomeScore.ToString() + " - " + m.AwayScore)</div>
                <div><strong>@(result != null ? result.ComputeFirstRoundScore() + " pts." : "")</strong></div>
            </div>

            @if (!Model.FirstRoundEnabled)
            {
                <div class="penca-row-result-wrapper">
                    @foreach (var r in otherResults)
                    {
                        <div class="penca-row-result">
                            <div class="username">@r.UserName(Model.Users, 8).ToLower()</div>
                            <div>@r.HomeScore - @r.AwayScore</div>
                            <div>@(r.ComputeFirstRoundScore() + " pts.")</div>
                        </div>
                    }
                </div>
            }

        </div>
            }
        }
    }
</article>
<aside>
    <h3>Ranking general</h3>
    <table>
        @{var pos = 1;}
        @foreach (var s in Model.Ranking)
        {
            <tr>
                <td>@(pos)º
                </td>
                <td>@s.User.UserName
                </td>
                <td><strong>@(s.Points)</strong>
                </td>
            </tr>
            pos++;
        }
    </table>
    <h3>Fase de grupos</h3>
    <ul>
        <li>Acierto por ganador o empate: 1 punto</li>
        <li>Acierto por ganador y cantidad de goles de uno de los equipos: 2 puntos</li>
        <li>Acierto por resultado exacto: 3 puntos</li>
    </ul>
</aside>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#btnSave").click(function () {
                var scores = "";
                $("input[type='text']:enabled").each(function () {
                    scores += $(this).data("id") + "!" + $(this).val() + "|";
                });
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveEigthRound")" + "?data=" + scores,
                    success: function (data) {
                        if (data == "OK") {
                            alert("Los cambios se guardaron correctamente");
                            location.reload();
                        }
                    }
                });
            });
        });
    </script>

    @if (Model.DateCount >= 2)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                var chartOpt = {
                    chart: {
                        type: 'column'
                    },
                    plotOptions: {
                        series: {
                            stacking: 'normal'
                        }
                    },
                    title: {
                        text: ''
                    },
                    xAxis: {
                        title: {
                            text: ''
                        },
                        categories: [@Html.Raw(Model.CategoriesJS)]
                    },
                    yAxis: {
                        title: {
                            text: ''
                        },
                        min: 0
                    },
                    legend: {
                        align: 'right',
                        verticalAlign: 'middle',
                        layout: 'vertical',
                        floating: false
                    },
                    series: []
                };

            @foreach (var s in Model.Ranking)
            {
                <text>chartOpt.series.push({ name: '@s.User.UserName', data: [@s.ScoreByDateJS] });</text>
            }

                $('#chart').highcharts(chartOpt);

                var chartOptAcc = {
                    chart: {
                        type: 'spline'
                    },
                    title: {
                        text: ''
                    },
                    xAxis: {
                        title: {
                            text: ''
                        },
                        categories: [@Html.Raw(Model.CategoriesJS)]
                    },
                    yAxis: {
                        title: {
                            text: ''
                        },
                        min: 0
                    },
                    legend: {
                        align: 'right',
                        verticalAlign: 'middle',
                        layout: 'vertical',
                        floating: false
                    },
                    series: []
                };

            @foreach (var s in Model.Ranking)
            {
                <text>chartOptAcc.series.push({ name: '@s.User.UserName', data: [@s.AccumScoreByDateJS] });</text>
            }

                $('#chartAcc').highcharts(chartOptAcc);

                var chartOptGroup = {
                    chart: {
                        type: 'bar'
                    },
                    plotOptions: {
                        series: {
                            stacking: 'normal'
                        }
                    },
                    title: {
                        text: ''
                    },
                    xAxis: {
                        title: {
                            text: ''
                        },
                        categories: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
                    },
                    yAxis: {
                        title: {
                            text: ''
                        },
                        min: 0
                    },
                    legend: {
                        align: 'right',
                        verticalAlign: 'middle',
                        layout: 'vertical',
                        floating: false
                    },
                    series: []
                };

            @foreach (var s in Model.Ranking)
            {
                <text>chartOptGroup.series.push({ name: '@s.User.UserName', data: [@s.ScoreByGroupJS] });</text>
            }

                $('#groupsChart').highcharts(chartOptGroup);
            });
        </script>
    }
}