@model Penca.Models.MainModel
@{
    ViewBag.Title = "Pronósticos";
    var disabled = Model.FirstRoundEnabled ? "" : "disabled";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>Para vos que te gusta la timba.</h2>
            </hgroup>
            @if (!Request.IsAuthenticated)
            {
                <hgroup class="title">
                    <h2>Para cargar resultados hay que @Html.ActionLink("registrarse", "Register", "Account") o @Html.ActionLink("iniciar sesión", "Login", "Account"), no seas mamarera!</h2>
                </hgroup>
            }
        </div>
    </section>
}
<article>
    @if (Model.DateCount >= 2)
    {
        <hgroup class="title">
            <h1>Ranking fecha a fecha</h1>
        </hgroup>
        <div id="chartAcc">
        </div>
        <hgroup class="title">
            <h1>Puntos de cada fecha</h1>
        </hgroup>
        <div id="chart">
        </div>
    }
    <hgroup class="title">
        <h1>Pronóstico fase de grupos</h1>
    </hgroup>
    @foreach (var m in Model.Matches)
    {
        var result = Model.MyResults.FirstOrDefault(r => r.MatchId == m.MatchId);
        <div class="penca-row">
            <div class="penca-row-date">
                <div>@m.MatchDate.ToString("dd MMM HH:mm").ToUpper()</div>
                <div>GRUPO @m.Group</div>
            </div>
            <img height="28" src="~/Content/images/@m.HomeFlag()" title="@m.HomeTeam" />
            <input type="text"  value="@(result != null ? result.HomeScore : 0)" @disabled />
            <span>-</span>
            <input type="text"   value="@(result != null ? result.AwayScore : 0)" @disabled />
            <img height="28" src="~/Content/images/@m.AwayFlag()" title="@m.AwayTeam" />
            <span>@(m.HomeScore < 0 ? "Pendiente" : "Final: " + m.HomeScore.ToString() + " - " + m.AwayScore)</span>
            <span>@(result != null ? result.ComputeFirstRoundScore()+" pts." : "")</span>
        </div>
    }
    <button id="btnSave" @disabled>GUARDAR</button>
</article>
<aside>
    <h3>Ranking general</h3>
    <table>
        @{var pos = 1;}
        @foreach (var s in Model.Ranking)
        {
            <tr>
                <td>@(pos)º
                </td>
                <td>@s.User.UserName
                </td>
                <td>@s.Points pts
                </td>
            </tr>
            pos++;
        }
    </table>
    <h3>Fase de grupos</h3>
    <ul>
        <li>Acierto por ganador o empate: 1 punto</li>
        <li>Acierto por ganador y cantidad de goles de uno de los equipos: 2 puntos</li>
        <li>Acierto por resultado exacto: 3 puntos</li>
    </ul>
</aside>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#btnSave").click(function () {
                var scores = "";
                $("input[type='text']").each(function () {
                    scores += $(this).val() + "|";
                });
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveFirstRound")" + "?data=" + scores,
                    success: function (data) {
                        if (data == "OK") {
                            alert("Los cambios se guardaron correctamente");
                            location.reload();
                        }
                    }
                });
            });


        });
    </script>

    @if (Model.DateCount >= 2)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                var chartOpt = {
                    chart: {
                        type: 'spline'
                    },
                    title: {
                        text: ''
                    },
                    xAxis: {
                        title: {
                            text: ''
                        },
                        categories: [@Html.Raw(Model.CategoriesJS)]
                     },
                     yAxis: {
                         title: {
                             text: ''
                         },
                         min: 0
                     },
                     legend: {
                         align: 'right',
                         verticalAlign: 'middle',
                         layout: 'vertical',
                         floating: false
                     },
                     series: []
                 };

            @foreach (var s in Model.Ranking)
            {
                <text>chartOpt.series.push({ name: '@s.User.UserName', data: [@s.ScoreByDateJS] });</text>
            }

                 $('#chart').highcharts(chartOpt);

                 var chartOptAcc = {
                     chart: {
                         type: 'spline'
                     },
                     title: {
                         text: ''
                     },
                     xAxis: {
                         title: {
                             text: ''
                         },
                         categories: [@Html.Raw(Model.CategoriesJS)]
                     },
                     yAxis: {
                         title: {
                             text: ''
                         }
                     },
                     legend: {
                         align: 'right',
                         verticalAlign: 'middle',
                         layout: 'vertical',
                         floating: false
                     },
                     series: []
                 };

            @foreach (var s in Model.Ranking)
            {
                <text>chartOptAcc.series.push({ name: '@s.User.UserName', data: [@s.AccumScoreByDateJS] });</text>
            }

                 $('#chartAcc').highcharts(chartOptAcc);
             });
        </script>
    }
}